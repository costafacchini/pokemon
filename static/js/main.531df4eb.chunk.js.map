{"version":3,"sources":["services/request.js","scenes/Pokemons/services/pokemon.js","scenes/Pokemons/scenes/slice.js","scenes/Pokemons/scenes/Index/components/Hability/index.js","scenes/Pokemons/scenes/Index/components/Card/index.js","scenes/Pokemons/scenes/Index/slice.js","scenes/Pokemons/scenes/Index/index.js","scenes/Pokemons/scenes/Show/slice.js","scenes/Pokemons/scenes/Show/components/Stats/index.js","scenes/Pokemons/scenes/Show/components/Information/index.js","scenes/Pokemons/scenes/Show/components/MultipleInformation/index.js","scenes/Pokemons/scenes/Show/index.js","scenes/Pokemons/scenes/routes.js","scenes/Pokemons/routes.js","scenes/routes.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["request","url","a","fetch","response","ok","json","text","pokemonsCount","count","allPokemons","results","sort","compare","console","error","pokemon1","pokemon2","name","fetchPokemonsDetails","pokemonsOfPage","pokemons","promises","map","pokemon","hasOwnProperty","fetchPokemonInfo","pokemonInfo","push","abilities","hability","ability","types","type","height","weight","number","order","image","id","images","original","sprites","other","alternative","stats","stat","value","visible","Promise","all","pokemonsSlice","createSlice","initialState","basicList","reducers","loadBasicList","state","action","payload","actions","Hability","className","Card","href","toLowerCase","src","alt","index","normalizeValue","toString","toUpperCase","pokemonIndexSlice","pokemonsLoaded","pokemonsShowing","pokemonsFiltered","expression","page","filtered","addMore","setExpression","filter","expressionNormalized","includes","contains","setPage","reset","PokemonsIndex","dispatch","useDispatch","useSelector","pokemonIndex","useEffect","length","intervalEnd","intervalStart","slice","then","placeholder","onChange","e","target","onClick","pokemonShowSlice","pokemonData","setPokemon","Stats","style","styles","titleInfo","chartType","loader","data","chartData","getChartData","options","width","bar","groupWidth","legend","position","Information","title","valueInfo","MultipleInformation","collection","information","habilityInfo","isEmpty","obj","prop","JSON","stringify","PokemonShow","pokemonShow","pokemonId","useParams","pokemonBuffered","find","pokemonsInfo","rowInfo","rowGraph","window","history","back","PokemonRoutes","match","useRouteMatch","path","exact","PokemonsRoutes","fetchBasicList","pokemonList","Routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","pokemonReducer","pokemonIndexReducer","pokemonShowReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.531df4eb.chunk.js","sourcesContent":["export default async function request(url) {\n  const response = await fetch(url)\n\n  return response.ok ? response.json() : response.text()\n}\n","import request from '../../../services/request'\n\nasync function fetchBasicList() {\n  try {\n    const pokemonsCount = await request('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=1')\n    const allPokemons = await request(`https://pokeapi.co/api/v2/pokemon/?offset=0&limit=${pokemonsCount.count}`)\n\n    return allPokemons.results.sort(compare)\n  } catch (error) {\n    console.error('Erro ao buscar a lista de pokemons', error)\n  }\n}\n\nfunction compare(pokemon1, pokemon2) {\n  if (pokemon1.name < pokemon2.name){\n    return -1\n  }\n\n  if (pokemon1.name > pokemon2.name){\n    return 1\n  }\n\n  return 0\n}\n\nasync function fetchPokemonsDetails(pokemonsOfPage) {\n  try {\n    let pokemons = []\n\n    const promises = pokemonsOfPage.map(async pokemon => {\n      if (!pokemon.hasOwnProperty('number')) {\n        const pokemonInfo = await fetchPokemonInfo(pokemon.url)\n\n        if (pokemonInfo !== 'Not Found') {\n          pokemons.push({\n            abilities: pokemonInfo.abilities?.map(hability => hability.ability.name),\n            types: pokemonInfo.types?.map(type => type.type.name),\n            height: pokemonInfo.height,\n            weight: pokemonInfo.weight,\n            number: pokemonInfo.order,\n            name: pokemonInfo.name,\n            image: `https://pokeres.bastionbot.org/images/pokemon/${pokemonInfo.id}.png`,\n            id: pokemonInfo.id,\n            images: {\n              original: pokemonInfo.sprites.other[\"official-artwork\"][\"front_default\"],\n              alternative: pokemonInfo.sprites.other[\"dream_world\"][\"front_default\"]\n            },\n            stats: pokemonInfo.stats?.map(stat => {\n              return { name: stat.stat.name, value: stat[\"base_stat\"] }\n            }),\n            visible: true\n          })\n        } else {\n          pokemons.push({ ...pokemon, visible: false })\n        }\n      }\n    })\n\n    await Promise.all(promises)\n\n    return pokemons\n  } catch (error) {\n    console.error('Erro ao buscar os detalhes dos pokemons', error)\n  }\n}\n\nasync function fetchPokemonInfo(url) {\n  return await request(url)\n}\n\nexport { fetchBasicList, fetchPokemonsDetails }","import { createSlice } from '@reduxjs/toolkit'\n\nexport const pokemonsSlice = createSlice({\n  name: 'pokemon',\n  initialState: {\n    basicList: []\n  },\n  reducers: {\n    loadBasicList: (state, action) => {\n      state.basicList = action.payload\n    }\n  }\n})\n\nexport const { loadBasicList } = pokemonsSlice.actions\n\nexport default pokemonsSlice.reducer","import React from 'react'\n\nexport default function Hability({ hability }) {\n  return (\n    <span className='badge badge-secondary mr-1'>{hability}</span>\n  )\n}\n","import React from 'react'\nimport Hability from '../Hability'\n\nexport default function Card({ pokemon }) {\n  const { images, name, number, abilities } = pokemon\n\n  return (\n    <div className=\"col mt-4\">\n      <div className='card shadow-sm border-0 rounded'>\n        <div className='card-body p-0'>\n          <a href={`#/pokemon/${name.toLowerCase()}`}>\n            <img className='card-img-top w-80 img-thumbnail' src={images.original} alt=\"\" />\n          </a>\n          <div className=\"p-3\">\n            <h5 className=\"mb-0\">{name}</h5>\n            <p className=\"small text-muted\">{number}</p>\n            <ul className=\"social mb-0 list-inline mt-3\">\n              {abilities && abilities.map((hability, index) => (\n                <li key={name + index} className=\"list-inline-item m-0\">\n                  <Hability hability={hability} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import { createSlice } from '@reduxjs/toolkit'\n\nfunction contains(pokemon, expression) {\n  const expressionNormalized = normalizeValue(expression)\n  const nameNormalized = normalizeValue(pokemon.name)\n\n  return nameNormalized.includes(expressionNormalized)\n}\n\nfunction normalizeValue(value) {\n  return value.toString().toUpperCase()\n}\n\nexport const pokemonIndexSlice = createSlice({\n  name: 'pokemonIndex',\n  initialState: {\n    pokemonsLoaded: [],\n    pokemonsShowing: [],\n    pokemonsFiltered: [],\n    expression: '',\n    page: 1,\n    filtered: false\n  },\n  reducers: {\n    addMore: (state, action) => {\n      state.pokemonsShowing = [ ...state.pokemonsShowing, ...action.payload]\n      if (!state.filtered) {\n        state.pokemonsLoaded = [ ...state.pokemonsLoaded, ...action.payload]\n      }\n    },\n    setExpression: (state, action) => {\n      state.expression = action.payload\n    },\n    filter: (state, action) => {\n      const { expression, basicList } = action.payload\n\n      if (expression === '') {\n        state.pokemonsShowing = state.pokemonsLoaded\n        state.pokemonsFiltered = []\n        state.filtered = false\n      } else {\n        state.pokemonsShowing = []\n        state.pokemonsFiltered = basicList.filter(pokemon => contains(pokemon, expression))\n        state.filtered = true\n      }\n    },\n    setPage: (state, action) => {\n      state.page = action.payload\n    }\n  }\n})\n\nexport const { addMore, filter, setExpression, setPage, reset } = pokemonIndexSlice.actions\n\nexport default pokemonIndexSlice.reducer","import React, { useEffect } from 'react'\nimport Card from './components/Card'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchPokemonsDetails } from '../../services/pokemon'\nimport { addMore, filter, setExpression, setPage } from './slice'\n\nexport default function PokemonsIndex({ basicList }) {\n  const dispatch = useDispatch()\n  const pokemonsShowing = useSelector(state => state.pokemonIndex.pokemonsShowing)\n  const pokemonsFiltered = useSelector(state => state.pokemonIndex.pokemonsFiltered)\n  const expression = useSelector(state => state.pokemonIndex.expression)\n  const page = useSelector(state => state.pokemonIndex.page)\n  const filtered = useSelector(state => state.pokemonIndex.filtered)\n\n  const cardsForPage = 40\n\n  useEffect(() => {\n    if (basicList.length > 0) {\n      const intervalEnd = page * cardsForPage\n      const intervalStart = intervalEnd - cardsForPage\n\n      if ((!filtered) && (basicList.length > pokemonsShowing.length) && (pokemonsShowing.length < intervalEnd)) {\n        const pokemonsOfPage = basicList.slice(intervalStart, intervalEnd)\n\n        fetchPokemonsDetails(pokemonsOfPage).then(pokemons => {\n          dispatch(addMore(pokemons))\n        })\n      }\n\n      if (filtered && pokemonsShowing.length === 0) {\n        fetchPokemonsDetails(pokemonsFiltered).then(pokemons => {\n          dispatch(addMore(pokemons))\n        })\n      }\n    }\n  }, [dispatch, basicList, page, pokemonsShowing, expression, filtered, pokemonsFiltered] )\n\n  function changeExpression(e) {\n    dispatch(setExpression(e.target.value))\n  }\n\n  return (\n    <>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-4 pl-0'>\n            <input\n              className='form-control'\n              name='expression'\n              type='text'\n              value={expression}\n              placeholder='Busque por nome ou número'\n              onChange={changeExpression}\n            />\n          </div>\n          <div className='col-2'>\n            <button\n              type='button'\n              className='btn btn-primary'\n              onClick={() => {\n                dispatch(filter({ expression: expression, basicList: basicList }))\n              }}\n            >\n              Buscar\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <section>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-36'>\n              <div className={'row row-cols-1 row-cols-md-4'} >\n                {pokemonsShowing && pokemonsShowing.filter(pokemon => pokemon.visible === true).map((pokemon) =>  (\n                  <Card key={pokemon.id} pokemon={pokemon} />\n                ))}\n              </div>\n            </div>\n          </div>\n          {expression === '' && (basicList.length > pokemonsShowing.length) && (\n            <div className='row'>\n              <div className='col text-center mt-3'>\n                <button type='button' className='btn btn-outline-primary d-print-none' onClick={() => dispatch(setPage(page + 1))}>\n                  Carregar mais\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </section>\n    </>\n  )\n}","import { createSlice } from '@reduxjs/toolkit'\n\nexport const pokemonShowSlice = createSlice({\n  name: 'pokemonShow',\n  initialState: {\n    pokemonData: { }\n  },\n  reducers: {\n    setPokemon: (state, action) => {\n      state.pokemonData = action.payload\n    }\n  }\n})\n\nexport const { setPokemon } = pokemonShowSlice.actions\n\nexport default pokemonShowSlice.reducer","import React from 'react'\nimport Chart from 'react-google-charts'\nimport styles from \"../../style.css\";\n\nexport default function Stats({ stats }) {\n  function getChartData(stats) {\n    const chartData = [[\n      'Poderes',\n      'xp'\n    ]]\n\n    stats?.map(stat => chartData.push([ stat.name, stat.value ]))\n\n    return chartData\n  }\n\n  return (\n    <div>\n      <div className='title-info' style={styles.titleInfo}>ESTATÍSTICAS</div>\n      <Chart\n        chartType=\"Bar\"\n        loader={<div>Loading Chart</div>}\n        data={getChartData(stats)}\n        options={{\n          width: 525,\n          height: 200,\n          bar: { groupWidth: '95%' },\n          legend: { position: 'none' },\n        }}\n      />\n    </div>\n  )\n}","import React from 'react'\nimport styles from '../../style.css'\n\nexport default function Information({ title, value }) {\n  return (\n    <div>\n      <div className='title-info' style={styles.titleInfo}>{title.toUpperCase()}</div>\n      <div className='value-info' style={styles.valueInfo}>{value}</div>\n    </div>\n  )\n}\n\n","import React from 'react'\nimport styles from '../../style.css'\n\nexport default function MultipleInformation({ title, collection }) {\n  return (\n    <div>\n      <div className='title-info' style={styles.titleInfo}>{title.toUpperCase()}</div>\n      {collection.map(information => (\n        <span key={information} className='badge hability-info' style={styles.habilityInfo}>{information}</span>\n      ))}\n    </div>\n  )\n}\n\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setPokemon } from './slice'\nimport { fetchPokemonsDetails } from '../../services/pokemon'\nimport styles from './style.css'\nimport Stats from './components/Stats'\nimport Information from './components/Information'\nimport MultipleInformation from './components/MultipleInformation'\n\nfunction isEmpty(obj) {\n  for(let prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false\n    }\n  }\n\n  return JSON.stringify(obj) === JSON.stringify({});\n}\n\nexport default function PokemonShow({ basicList, pokemonsShowing }) {\n  const dispatch = useDispatch()\n  const pokemonData = useSelector(state => state.pokemonShow.pokemonData)\n\n  let { pokemonId } = useParams()\n\n  useEffect(() => {\n    if (basicList.length > 0) {\n      const pokemonBuffered = pokemonsShowing.find(pokemon => pokemon.name === pokemonId)\n      if (pokemonBuffered) {\n        dispatch(setPokemon(pokemonBuffered))\n      } else {\n        const pokemon = basicList.find(pokemon => pokemon.name === pokemonId)\n        fetchPokemonsDetails([ pokemon ]).then(pokemonsInfo => {\n          dispatch(setPokemon(pokemonsInfo[0]))\n        })\n      }\n    }\n  }, [dispatch, basicList, pokemonId, pokemonsShowing])\n\n  function handleClick() {\n    window.history.back()\n  }\n\n  return (\n    <>\n      {isEmpty(pokemonData) && (\n        <h3>{pokemonId} não encontrado</h3>\n      )}\n      {!isEmpty(pokemonData) && (\n        <div className='container'>\n          <div className='row'>\n            <div className='col-6'>\n              <img src={pokemonData.images.original} alt=\"\" />\n            </div>\n            <div className='col-6'>\n              <div className='container'>\n                <div className='row'>\n                  <div className='col-12'>\n                    <h1>{pokemonData.name}</h1>\n                  </div>\n                </div>\n                <div className='row row-info' style={styles.rowInfo}>\n                  <div className='col-4'>\n                    <Information title={'Número'} value={pokemonData.number} />\n                  </div>\n                  <div className='col-4'>\n                    <Information title={'Altura'} value={pokemonData.height} />\n                  </div>\n                  <div className='col-4'>\n                    <Information title={'Peso'} value={pokemonData.weight} />\n                  </div>\n                </div>\n                <div className='row row-info' style={styles.rowInfo}>\n                  <div className='col-6'>\n                    <MultipleInformation title={'Habilidades'} collection={pokemonData.abilities} />\n                  </div>\n                  <div className='col-6'>\n                    <MultipleInformation title={'Tipos'} collection={pokemonData.types} />\n                  </div>\n                </div>\n                <div className='row row-graph' style={styles.rowGraph}>\n                  <div className='col-12'>\n                    <Stats stats={pokemonData.stats} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='col-12 text-center'>\n              <button className='btn btn-primary btn-lg' onClick={handleClick}>Voltar</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n","import {Route, Switch, useRouteMatch} from 'react-router-dom'\nimport PokemonsIndex from './Index'\nimport PokemonShow from './Show'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function PokemonRoutes({ basicList }) {\n  const pokemonsShowing = useSelector(state => state.pokemonIndex.pokemonsShowing)\n\n  let match = useRouteMatch()\n\n  return (\n    <Switch>\n      <Route path={`${match.path}/:pokemonId`}>\n        <PokemonShow basicList={basicList} pokemonsShowing={pokemonsShowing} />\n      </Route>\n      <Route exact path={`${match.path}`}>\n        <PokemonsIndex basicList={basicList} />\n      </Route>\n    </Switch>\n  )\n}","import React, { useEffect } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchBasicList } from './services/pokemon'\nimport { loadBasicList } from './scenes/slice'\nimport PokemonsIndex from './scenes/Index'\nimport PokemonRoute from './scenes/routes'\n\nexport default function PokemonsRoutes() {\n  const dispatch = useDispatch()\n  const basicList = useSelector(state => state.pokemon.basicList)\n\n  useEffect(() => {\n    if (basicList.length === 0) {\n      fetchBasicList().then(pokemonList => {\n        dispatch(loadBasicList(pokemonList))\n      })\n    }\n  }, [dispatch, basicList])\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/pokemon\">\n          <PokemonRoute basicList={basicList} />\n        </Route>\n        <Route path=\"/\">\n          <PokemonsIndex basicList={basicList} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}","import React from 'react'\nimport PokemonsRoutes from './Pokemons/routes'\n\nexport default function Routes() {\n  return (\n    <PokemonsRoutes />\n  )\n}\n\n","import './App.css'\nimport React from 'react'\nimport Routes from './scenes/routes'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <button className=\"navbar-brand\">\n          <img className=\"navbar-brand\" src=\"https://assets.pokemon.com/assets/cms2/img/misc/gus/buttons/logo-pokemon-79x45.png\" alt=\"\"/>\n        </button>\n      </nav>\n        <Routes />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport pokemonReducer from '../scenes/Pokemons/scenes/slice'\nimport pokemonIndexReducer from '../scenes/Pokemons/scenes/Index/slice'\nimport pokemonShowReducer from '../scenes/Pokemons/scenes/Show/slice'\n\nexport default configureStore({\n  reducer: {\n    pokemon: pokemonReducer,\n    pokemonIndex: pokemonIndexReducer,\n    pokemonShow: pokemonShowReducer\n  }\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}